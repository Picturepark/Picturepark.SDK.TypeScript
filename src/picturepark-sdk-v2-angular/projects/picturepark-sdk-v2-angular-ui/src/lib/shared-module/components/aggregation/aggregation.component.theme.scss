@use '~@angular/material' as mat;
@import '~@angular/material/theming';

@mixin pp-aggregation-theme($theme) {
  $primary: map-get($theme, primary);

  pp-aggregation-item {
    .aggregation {
      border-color: mat.get-color-from-palette($primary, divider);

      &__option-title {
        color: mat.get-color-from-palette($primary, on-background-dark);
      }

      .mat-expansion-panel-header {
        font-size: mat.font-size($custom-typography, display-1);

        .mat-content {
          border-bottom: 1px solid mat.get-color-from-palette($primary, divider);
        }

        mat-panel-title {
          &.mat-expansion-panel-header-title {
            color: mat.get-color-from-palette($primary, on-background-dark);
          }
        }

        &:hover {
          background-color: mat.get-color-from-palette($primary, opacity-light);
        }
      }

      .mat-list-base {
        .mat-list-item,
        .mat-list-option,
        .mat-subheader {
          font-size: mat.font-size($custom-typography, display-1);
        }
      }

      .mat-list-item.mat-list-option .mat-list-item-content {
        .mat-pseudo-checkbox {
          color: mat.get-color-from-palette($primary, on-background-dark);

          &.mat-pseudo-checkbox-checked {
            color: mat.get-color-from-palette($primary, primary);
          }
        }
      }

      .expand-filters {
        button {
          color: mat.get-color-from-palette($primary, primary);
        }
      }
    }

    .aggregation.disabled {
      mat-panel-title {
        &.mat-expansion-panel-header-title {
          opacity: 0.7;
        }
      }
      &:hover {
        background-color: initial;
      }
    }

    mat-form-field.search {
      background-color: mat.get-color-from-palette($primary, surface-light);

      .search-icon {
        color: mat.get-color-from-palette($primary, on-surface-light);
      }
    }
  }
}
